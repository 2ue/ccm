name: Publish to npm

on:
  push:
    tags:
      - 'v*'

jobs:
  publish:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      id-token: write # Áî®‰∫é npm provenance

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          registry-url: 'https://registry.npmjs.org'

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 7.33.7

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run tests (exclude desktop)
        run: pnpm test

      - name: Build packages (exclude desktop)
        run: pnpm build

      - name: Extract version from tag
        id: version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

      - name: Verify version match
        run: |
          CORE_VERSION=$(node -p "require('./packages/core/package.json').version")
          CLI_VERSION=$(node -p "require('./packages/cli/package.json').version")
          TAG_VERSION="${{ steps.version.outputs.VERSION }}"

          if [ "$CORE_VERSION" != "$TAG_VERSION" ] || [ "$CLI_VERSION" != "$TAG_VERSION" ]; then
            echo "Version mismatch!"
            echo "Tag: $TAG_VERSION"
            echo "Core: $CORE_VERSION"
            echo "CLI: $CLI_VERSION"
            exit 1
          fi

      - name: Publish @ccman/core
        run: |
          cd packages/core
          pnpm publish --access public --no-git-checks
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Publish ccman CLI
        run: |
          cd packages/cli
          pnpm publish --access public --no-git-checks
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          name: Release ${{ steps.version.outputs.VERSION }}
          body: |
            ## üì¶ npm ÂåÖÂ∑≤ÂèëÂ∏É

            - [@ccman/core@${{ steps.version.outputs.VERSION }}](https://www.npmjs.com/package/@ccman/core)
            - [@ccman/cli@${{ steps.version.outputs.VERSION }}](https://www.npmjs.com/package/@ccman/cli)

            ## üì• ÂÆâË£Ö

            ```bash
            npm install -g @ccman/cli
            ```

            ËØ¶ËßÅ [CHANGELOG.md](https://github.com/${{ github.repository }}/blob/main/CHANGELOG.md)
          draft: false
          prerelease: ${{ contains(steps.version.outputs.VERSION, 'alpha') || contains(steps.version.outputs.VERSION, 'beta') }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
